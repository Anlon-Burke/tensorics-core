= Tensorics Core
Kajetan Fuchsberger <kajetan.fuchsberger@cern.ch>, Arkadiusz Gorzawski <arkadiusz.gorzawski@cern.ch>
2014-07-12
:icons: font
:sectanchors:
:source-highlighter: highlightjs
:examplesource: src/examples/org/tensorics/core/examples
:sourcecodedir: src/java/org/tensorics/core
:javadoc-baseurl: file://c:/Users/kaifox/Documents/work/workspace/tensorics-core/build/docs/javadoc/org/tensorics/core/tensor

image:https://travis-ci.org/tensorics/tensorics-core.svg?branch=master["Travis-CI build", link="https://travis-ci.org/tensorics/tensorics-core"]
image:https://coveralls.io/repos/tensorics/tensorics-core/badge.svg?branch=master&service=github["Code coverage", link="https://coveralls.io/github/tensorics/tensorics-core?branch=master"]

Tensorics is a java framework which uses a tensor as a central object. A tensor represents a set of values placed in an N-dimensional space. Wherever you are tempted to use maps of maps, a tensor might be a good choice ;-) Tensorics provides methods to create, transform and performing calculations with those tensors. 

Tensorics is a java framework for data processing of multidimensional data. 
The core object is a Tensor which represents a collection of values of arbitrary
types, which are addressed by coordinates in an N-dimensional space. The framework
provides several core features, which make it easy to work with big amounts of 
numerical data and drastically simplify repetitive tasks:

---
* Tensors of arbitrary dimensionality as central object.
* Tensors can have elements of any (java) type.
* Structural and numerical operations on tensors.
* Java internal DSL (fluent API) for all operations on scalars and tensors.
* Quantities (value - unit pair).
* Full support for Tensors of quantities.
* Error and Validity propagation for quantities and tensors of quantities.
* Scripting of all functionality with deferred execution, which opens the 
possibilities for parallel processing and massive distribution of calculations. 

---
 
IMPORTANT: Both, the current implementation as well as this document, are work in progress. 
The main purpose of the actual version is provide some functionality of every of the above 
mentioned categories and proofing the concepts of their interplay. Still, already the available 
subset of features should have useful applications in many contexts. Almost no effort put on 
profiling and performance optimization. Therefore, it might well be that some operations are 
quite inefficient and/or memory consuming for big objects. Such improvements are definitely planned 
for later iterations. Any contributions are welcome.
