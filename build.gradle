/* Plugins */
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'cobertura'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'org.asciidoctor.gradle.asciidoctor'
apply from : './scripts/deploy.gradle'

/* Build script */
buildscript {
	repositories {
		if (System.getenv('BUILD_SERVER')) {
			maven {
			    url 'http://artifactory.cern.ch/repo'
			    url 'http://artifactory.cern.ch/jcenter'
		    }
		} else {
			mavenCentral()
			jcenter()
        }
	}

	dependencies {
		classpath 'net.saliman:gradle-cobertura-plugin:2.2.6'
		classpath 'org.ow2.asm:asm:5.0.3'  
		classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
		classpath 'org.asciidoctor:asciidoctor-gradle-plugin:0.7.2'
		classpath 'org.asciidoctor:asciidoctorj:1.5.0'
	}
}

/* Project dependencies */
repositories {
		if (System.getenv('BUILD_SERVER')) {
			maven {
			    url 'http://artifactory.cern.ch/repo'
			    url 'http://artifactory.cern.ch/jcenter'
		    }
		} else {
			mavenCentral()
			jcenter()
        }
}

sourceSets {
	main { 
		java { 
			srcDir 'src/java' 
		} 
	}
	test {
		java {
			srcDir 'src/examples'
			srcDir 'src/test'
		}
	}
}

dependencies {
	compile 'org.jscience:jscience:4.3.1'
	compile 'com.google.guava:guava:19.0'
	compile 'org.hamcrest:hamcrest-all:1.3'

	testCompile 'junit:junit:4.12'
	testCompile 'org.mockito:mockito-core:1.10.19'
	testCompile 'org.objenesis:objenesis:2.4'
	testCompile 'com.openpojo:openpojo:0.8.4'
		
}

if (JavaVersion.current().isJava8Compatible()) {
  allprojects {
    tasks.withType(Javadoc) {
      options.addStringOption('Xdoclint:none', '-quiet')
    }
  }
}

javadoc { options.encoding = "UTF-8" }

cobertura.coverageFormats = ['html', 'xml']
cobertura.coverageSourceDirs = sourceSets.main.java.srcDirs

/* Deployment */
task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

